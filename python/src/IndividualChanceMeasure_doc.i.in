%feature("docstring") OTROBOPT::IndividualChanceMeasure
"Individual chance measure function.

.. math::

    M_{f, \theta}(x) = \mathbb{P}(f_k(x, \theta) > 0) \leq \alpha_k, \forall k \in K

Parameters
----------
distribution : :py:class:`openturns.Distribution`
    Distribution of parameters
function : :py:class:`openturns.NumericalMathFunction`
    Parametric function
alpha : sequence of float
    Probability levels

Examples
--------
>>> import openturns as ot
>>> import otrobopt
>>> thetaDist = ot.Normal(2.0, 0.1)
>>> f = ot.NumericalMathFunction(['x1', 'p1'], ['y1'], ['x1*p1'])
>>> parametric = ot.NumericalMathFunction(f, [1], [1.0])
>>> measure = otrobopt.IndividualChanceMeasure(thetaDist, parametric, [0.95])"

// ---------------------------------------------------------------------

%feature("docstring") OTROBOPT::IndividualChanceMeasure::setAlpha
"Probability levels accessor.

Parameters
----------
alpha : sequence of float in :math:`(0,1)`
    Probability levels"

// ---------------------------------------------------------------------

%feature("docstring") OTROBOPT::IndividualChanceMeasure::getAlpha
"Probability levels accessor.

Returns
-------
alpha : sequence of float in :math:`(0,1)`
    Probability levels"
