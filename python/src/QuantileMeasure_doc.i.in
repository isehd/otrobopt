%feature("docstring") OTROBOPT::QuantileMeasure
"Quantile measure function.

.. math::

    M_{f, \theta}(x) = s \text{~with~} \mathbb{P}(f(x, \theta) <= s) = \alpha

Parameters
----------
distribution : :py:class:`openturns.Distribution`
    Distribution of parameters
function : :py:class:`openturns.NumericalMathFunction`
    Parametric function
alpha : float, in :math:`(0,1)`
    Quantile level

Examples
--------
>>> import openturns as ot
>>> import otrobopt
>>> thetaDist = ot.Normal(2.0, 0.1)
>>> f = ot.NumericalMathFunction(['x', 'theta'], ['y'], ['x*theta'])
>>> parametric = ot.NumericalMathFunction(f, [1], [1.0])
>>> measure = otrobopt.QuantileMeasure(thetaDist, parametric, 0.8)"

// ---------------------------------------------------------------------

%feature("docstring") OTROBOPT::QuantileMeasure::setAlpha
"Quantile level accessor.

Parameters
----------
alpha : float
    Quantile level"

// ---------------------------------------------------------------------

%feature("docstring") OTROBOPT::QuantileMeasure::getAlpha
"Quantile level accessor.

Returns
-------
alpha : float
    Quantile level"
