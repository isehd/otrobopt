%feature("docstring") OTROBOPT::IndividualChanceMeasure
"Individual chance measure function.

.. math::

    M_{f, \theta}(x) = \mathbb{P}(f_k(x, \theta) \ge 0) \leq \alpha_k, \forall k \in K

    Mk_{f, \theta}(x) = \alpha_k - \int_{\Omega_{\theta}} \prod_{i=1}^d \mathbb{1}_{f(x, \theta) \ge 0} p(\theta) d \theta

Parameters
----------
distribution : :py:class:`openturns.Distribution`
    Distribution of parameters
function : :py:class:`openturns.NumericalMathFunction`
    Parametric function
operator : :py:class:`openturns.ComparisonOperator`
    Comparison operator in front of :math:`\alpha`
alpha : sequence of float
    Probability levels

Examples
--------
>>> import openturns as ot
>>> import otrobopt
>>> thetaDist = ot.Normal(2.0, 0.1)
>>> f = ot.NumericalMathFunction(['x1', 'p1'], ['y1'], ['x1*p1'])
>>> parametric = ot.NumericalMathFunction(f, [1], [1.0])
>>> measure = otrobopt.IndividualChanceMeasure(thetaDist, parametric, ot.Less(), [0.95])"

// ---------------------------------------------------------------------

%feature("docstring") OTROBOPT::IndividualChanceMeasure::setAlpha
"Probability levels accessor.

Parameters
----------
alpha : sequence of float in :math:`(0,1)`
    Probability levels"

// ---------------------------------------------------------------------

%feature("docstring") OTROBOPT::IndividualChanceMeasure::getAlpha
"Probability levels accessor.

Returns
-------
alpha : sequence of float in :math:`(0,1)`
    Probability levels"
