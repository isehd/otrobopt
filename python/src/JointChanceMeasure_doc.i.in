%feature("docstring") OTROBOPT::JointChanceMeasure
"Joint chance measure function.

.. math::

    M_{f, \theta}(x) = \mathbb{P}(f_k(x, \theta) > 0, \forall k \in K) \leq \alpha


Parameters
----------
distribution : :py:class:`openturns.Distribution`
    Distribution of parameters
function : :py:class:`openturns.NumericalMathFunction`
    Parametric function
alpha : float in :math:`(0,1)`
    Probability level

Examples
--------
>>> import openturns as ot
>>> import otrobopt
>>> thetaDist = ot.Normal(2.0, 0.1)
>>> f = ot.NumericalMathFunction(['x1', 'p1'], ['y1'], ['x1*p1'])
>>> parametric = ot.NumericalMathFunction(f, [1], [0., 1.])
>>> measure = otrobopt.JointChanceMeasure(thetaDist, parametric, 0.95)"

// ---------------------------------------------------------------------

%feature("docstring") OTROBOPT::JointChanceMeasure::setAlpha
"Probability level accessor.

Parameters
----------
alpha : float in :math:`(0,1)`
    Probability level"

// ---------------------------------------------------------------------

%feature("docstring") OTROBOPT::JointChanceMeasure::getAlpha
"Probability level accessor.

Returns
-------
alpha : float in :math:`(0,1)`
    Probability level"
